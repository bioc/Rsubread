\name{cellCounts}
\alias{cellCounts}
\title{Map and Count Single-Cell RNA Data Sets}
\description{The \code{cellCounts} function maps and counts reads in single-cell RNA (scRNA) data sets to generate cell-level UMI count tables.}
\usage{
cellCounts(

    # input data
    index,
    sample.index,
    input.mode = "BCL",
    cell.barcode = NULL,
  
    # specify the aligner used for read mapping
    aligner = "align",
  
    # parameters used by featureCounts for counting and assigning UMIs
    annot.inbuilt = "mm10",
    annot.ext = NULL,
    isGTFAnnotationFile = FALSE,
    GTF.featureType = "exon",
    GTF.attrType = "gene_id",
    useMetaFeatures = TRUE,
    nthreads = 10,

    # other parameters passed to align, subjunc and featureCounts functions 
    ...)
}
\arguments{
  \item{index}{ a character string giving the subread index built by the {buildindex} function.}
  \item{sample.index}{ A data frame containing raw input directories and index set name for each sample. The data frame must contain three columns with column headers named \code{"InputDirectory"}, \code{"Lane"}, \code{"SampleName"} and \code{"IndexSetName"}. Note that this is not the Sample Sheet created by an Illumina sequencer. This data frame is used by cellCounts to locate the input data and to produce a Sample Sheet which is then used to demultiplex samples. The name of an index set specifies a set of indices that were used for the sequencing of a sample. An example of the index set name is \code{"SI-P01-A2"}. See example blow for details.}
  \item{cell.barcode}{ A character string giving the name of a text file (can be gzipped) that contains the set of cell barcodes used in sample preparation. If \code{NULL}, a cell barcode set will be determined for the input data by cellCounts based on the matching of cell barcodes sequences of the first 100,000 reads in the data with the three cell barcode sets used by 10X Genomics. \code{NULL} by default.}
  \item{input.mode}{ Specify the input mode. Currently only the BCL-format input (ie \code{"BCL"}) is supported.}
  \item{aligner}{ Specify the name of the aligner: \code{"align"} or \code{"subjunc"} (not yet implemented). A NULL value indicates the function to skip the mapping step but directly use the BAM file in \code{"output.BAM"} for generating UMI counts. \code{"align"} by default.}
  \item{annot.inbuilt}{ Specify an inbuilt annotation for UMI counting. See \link[Rsubread]{featureCounts} for more details. \code{"mm10"} by default.}
  \item{annot.ext}{ Specify an external annotation for UMI counting. See \link[Rsubread]{featureCounts} for more details. \code{NULL} by default.}
  \item{isGTFAnnotationFile}{ See \link[Rsubread]{featureCounts} for more details. \code{FALSE} by default.}
  \item{GTF.featureType}{ See \link[Rsubread]{featureCounts} for more details. \code{"exon"} by default.}
  \item{GTF.attrType}{ See \link[Rsubread]{featureCounts} for more details. \code{"gene_id"} by default.} 
  \item{useMetaFeatures}{ Specify if UMI counting should be carried out at the meta-feature level (eg. gene level).  See \link[Rsubread]{featureCounts} for more details. \code{TRUE} by default.}
  \item{nthreads}{ A numeric value giving the number of threads used for read mapping and counting. 16 by default.}
  \item{...}{other parameters passed to align, subjunc and featureCounts functions.}
}

\details{
  \code{cellCounts} is designed to process single-cell RNA data that is generated by an Illumina sequencer. It does not need the data sets being demultiplexed and converted into fastq files, rather it does demultiplexing and BCL-format decoding on-the-fly. It is capable to process many data sets, each containing many samples, in one run.
}

\value{
  \code{cellCounts} returns a list object containing many elements.

The \code{"counts"} component of the returned object is itself a list object for the UMI counts for each sample. Each component in this list object is a matrix that contains UMI counts for a sample. Rows in the matrix are genes and columns are cells.

The \code{"Annotation"} component of the returned object is a data frame for the annotations used in counting. The columns include \code{"GeneID"}, \code{"Chr"}, \code{"Start"}, \code{"End"} and \code{"Length"}.

The \code{"sample.info"} component of the returned object is a data frame providing sample information and statistics related to the quantification results. It includes the following columns: \code{"SampleName"}, \code{"InputDirectory"}, \code{"TotalCells"}, \code{"HighConfidenceCells"}, \code{"RescuedCells"}, \code{"TotalUMI"}, \code{"TotalReads"}, \code{"MappedReads"} and \code{"AssignedReads"}. Order of sample names in this data frame is the same as the sample order in other components of the returned object including \code{"counts"} and \code{"cell.confidence"}. 

The \code{"cell.confidence"} component of the returned object is a list object indicating if a cell is a high-confidence cell or a rescued cell in each sample. Each component is a logical vector indicating the confidence of cells called in a sample. A high-confidence cell has a \code{"TRUE"} status.
}

\examples{\dontrun{
# Assume that we had four samples: Gene1KO, Gene2KO, Gene3KO and WT. 
#
# Cells from the four samples were marked by sample indices SI-GA-E1, SI-GA-E2,
# SI-GA-E3 and SI-GA-E4, respectively.
#
# These cells were sequenced in two runs, producing two diretories of raw data
# (RawData_1 and RawData_2). There should be RunInfo.xml, many gzipped BCL files
# and other files in each of the two directories.
#
# The first run used four lanes to sequence the Gene1KO and Gene2KO samples, and
# the second run uses four lanes to sequence the Gene3KO and WT samples.
#
# The sample-index data frame should contain all the information above:

sample.index <- data.frame(
  Input.Directory = c( rep("RawData_1",8), rep("RawData_2",8)),
  Lane = c(1,1,2,2,3,3,4,4,1,1,2,2,3,3,4,4),
  SampleName = c(rep(c("Gene1KO","Gene2KO"),4),rep(c("Gene3KO","WT"),4)),
  IndexSetName = c(rep(c("SI-GA-E1","SI-GA-E2"),4),rep(c("SI-GA-E3","SI-GA-E4"),4))
)

print(sample.index)
# the content in the sample-index data frame is:
#
#    Input.Directory Lane SampleName IndexSetName
# 1        RawData_1    1    Gene1KO     SI-GA-E1
# 2        RawData_1    1    Gene2KO     SI-GA-E2
# 3        RawData_1    2    Gene1KO     SI-GA-E1
# 4        RawData_1    2    Gene2KO     SI-GA-E2
# 5        RawData_1    3    Gene1KO     SI-GA-E1
# 6        RawData_1    3    Gene2KO     SI-GA-E2
# 7        RawData_1    4    Gene1KO     SI-GA-E1
# 8        RawData_1    4    Gene2KO     SI-GA-E2
# 9        RawData_2    1    Gene3KO     SI-GA-E3
# 10       RawData_2    1         WT     SI-GA-E4
# 11       RawData_2    2    Gene3KO     SI-GA-E3
# 12       RawData_2    2         WT     SI-GA-E4
# 13       RawData_2    3    Gene3KO     SI-GA-E3
# 14       RawData_2    3         WT     SI-GA-E4
# 15       RawData_2    4    Gene3KO     SI-GA-E3
# 16       RawData_2    4         WT     SI-GA-E4

# We then use cellCounts to demultiplex, map and quantify the four samples.
res <- cellCounts("mm10_index", sample.index)

# Check the statistics of the results.
print(res$sample.info)
}}
\author{Wei Shi and Yang Liao}
