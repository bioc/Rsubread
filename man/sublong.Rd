\name{sublong}
\alias{sublong}
\title{Align ultra-long sequencing reads to a reference genome via seed-and-vote and dynamic programming}
\description{\code{Sublong} function can align ultra-long DNA-seq reads generated by Nanopore, PacBio or similar technologies.}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\usage{
sublong(
  index,
  readFiles,
  outputFiles,
  outputFormat="BAM",
  nthreads=1
)
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\arguments{
	\item{index}{ a character vector giving the basename of index file. Index files should be located in the current directory. Using a full index that has no gaps between subreads is suggested. The index must be built in one block. See the manual for the options of \code{buildindex}. }
	\item{readFiles}{ a character vector giving the name of the input file(s) that contains reads to be aligned. Both FASTQ and gzipped FASTQ formats are acceptable. The quality score format must be Phred+33.}
	\item{outputFiles}{ a character vector specifying the name of the output file(s). }
	\item{outputFormat}{ a character vector specifying the format of the output file. \code{BAM} by default. Acceptable formats include \code{SAM} and \code{BAM}. }
	\item{nthreads}{ a numeric value giving the number of threads used for mapping. \code{1} by default. If the number of threads is greater than 1, the reads in the output file are not guaranteed to have the same order as the reads in the input file.}
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\details{
\code{Sublong} was specifically designed for ultra-long DNA-seq read mapping. Unlike \code{align} or \code{subjunc}, \code{sublong} does not build the indel table or junction table, but directly finds the full alignments of reads by using a bounded dynamic programming algorithm after the seed-and-vote step. This makes \code{sublong} able to map reads that are as long as millions of bases and also contain very many (teens of thousands of) artifitial indels introduced in sequencing. This is particularly important for mapping Nanopore sequencing reads.

Speed and accuracy were both prioritized in the development of \code{sublong}. This makes \code{sublong} fast enough to finish a data set containing one hundred thousands of Nanopore sequencing reads with a maximum read length of one million bases in teen minutes (running on 24 Xeon cores). Supreme accuracy of the mapping results was also observed in our simulations, comparing to other widely-used ultra-long read aligner.

\code{Sublong} still has some limits. Only single-end DNA-sequencing reads can be aligned in the current version of \code{sublong}, while the development toward RNA-seq read mapping is in our sight. \code{Sublong} can only give full alignment for reads from Nanopore 1D sequencing; it cannot align the full length of 2D sequencing reads.

Due to the limit of the BAM format, the CIGAR string for each alignment in a BAM file can have at most 65,535 ops. Although thousands of ops in a CIGAR string are beyond enough for hosting indels and/or exon-exon junctions detected from a short read, a ultra-long read can easily reach this limit because of the enormous amount of artificial indels. The limit can be raised to 99,900 by switching the output format to SAM. If the limit has been reached in the middle of a read, the remaining part of the read is reported as soft-clipped in the CIGAR string.
}
\author{Wei Shi and Yang Liao}
\examples{
library(Rsubread)
ref <- system.file("extdata","reference.fa",package="Rsubread")
buildindex(basename="./full_index",reference=ref,gappedIndex=FALSE, indexSplit=FALSE)
reads <- system.file("extdata","longreads.txt.gz",package="Rsubread")
sublong("./full_index",reads,"./Long_alignment.BAM",nthreads=4)
}
