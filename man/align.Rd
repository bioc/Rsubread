\name{align}
\alias{align}
\title{The Subread aligner - mapping next-generation sequencing reads via seed-and-vote}
\description{The Subread aligner is a super fast, accurate and scalable read aligner. It is a general purpose read aligner and can be  used to map reads generated by both genomic DNA sequencing and RNA-sequencing technologies.}
\usage{
align(index,readfile1,readfile2=NULL,output_file,nsubreads=10,TH1=3,TH2=1,nthreads=1,indels=5,phredOffset=33,markJunctionReads=TRUE,tieBreakQS=FALSE,tieBreakHamming=FALSE,unique=FALSE,min_distance=50,max_distance=600,PE_orientation="fr",DP_GapOpenPenalty=-2,DP_GapExtPenalty=0,DP_MismatchPenalty=0,DP_MatchScore=2)
}
\arguments{
  \item{index}{ character string giving the basename of index file. Index files should be located in the current directory.}
  \item{readfile1}{ character string giving the name of file which includes sequencing reads. This will be the name of first file of paired-end data are provided. The read file should be in FASTQ or FASTA format.}
  \item{readfile2}{ character string giving the name of second file when paired-end read data are provided. \code{NULL} by default.}
  \item{output_file}{ character string giving the name of output file which includes the mapping results.}
  \item{nsubreads}{ numeric value giving the number of subreads extracted from each read. 10 by default.} 
  \item{TH1}{ numeric value giving the consensus threshold for reporting a hit. This threshold will be applied to the first read if paired-end read data are provided. 3 by default.}
  \item{TH2}{ numeric value giving the consensus threhold for the second read in a pair. 1 by default.}
  \item{nthreads}{ numeric value giving the number of threads used for mapping. 1 by default.} 
  \item{indels}{ numeric value giving the number of insertions/deletions allowed during the mapping. 5 by default.}
  \item{phredOffset}{ numeric value added to the phred score of each base in each read. \code{33} by default.}
  \item{markJunctionReads}{ a logical value indicating whether the unmapped bases of discovered junction reads should be marked by "S" operations in their CIGAR strings in the SAM output file. The unmapped bases should originate from an exon which is different from the one the corresponding read was mapped to. 'Subjunc' program can then be called to discover exon junction locations. This options is only applicable to RNAseq data. \code{TRUE} by default.}
  \item{tieBreakQS}{logical. If \code{TRUE}, use quality scores to break ties when more than one best locations were found. \code{FALSE} by default. }
  \item{tieBreakHamming}{ logical. If \code{TRUE}, use Hamming distance to break ties when more than one best locations were found (to use this option, the index must be built with reference sequence included).}
  \item{unique}{ logical. If \code{TRUE}, only uniquely mapped reads will be reported (reads mapped to multiple locations in the reference genome will not be reported). This option can be used together with option \code{tieBreakQS} or \code{tieBreakHamming}.}
  \item{min_distance}{ numeric value giving the minimal distance between the pair of reads. 50 by default.}
  \item{max_distance}{ numeric value giving the maximal distance between the pair of reads. 600 by default.}
  \item{PE_orientation}{ character string giving the orientation of the two reads in a pair. "fr" by default, which means the first read is on the forward strand and the second read is on the reverse strand.}
  \item{DP_GapOpenPenalty}{ a numeric value giving the penalty for opening a gap when using the Smith-Waterman dynamic programming algorithm to detect insertions and deletions. The Smith-Waterman algorithm is only applied for those reads which are found to contain insertions or deletions. \code{-2} by default.}
  \item{DP_GapExtPenalty}{ a numeric value giving the penalty for extending the gap, used by the Smith-Waterman algorithm. \code{0} by default.}
  \item{DP_MismatchPenalty}{ a numeric value giving the penalty for mismatches, used by the Smith-Waterman algorithm. \code{0} by default.}
  \item{DP_MatchScore}{ a numeric value giving the score for matches used by the Smith-Waterman algorithm. \code{2} by default.}
  }
\details{
The Subread aligner is very efficient and accurate in mapping reads generated by the next-gen sequencing technologies.
It adopts a mapping paradigm called ``seed-and-vote", which extracts a number of 16mers (called seeds or subreads) for each read and uses these subreads to vote for the mapping location of the read.
An in-fill step is then applied to finalize the alignments (Liao et al. 2013).

The Subread aligner is written in C programming language (the C version can be downloaded from \url{http://subread.sourceforge.net/}), and this function calls it from R so that R/Bioconductor users can have access to it from their familiar environment. 

Subread supports the mappping of both genomic DNA sequencing (gDNA-seq) reads and RNA sequencing (RNA-seq) reads.
It can be used to align reads generated from major sequencing platforms including Illumina GA/HiSeq, ABI SOLiD, Roche 454 and Ion Torrent sequencers.
Note that to map color-space reads (e.g. SOLiD reads), a color-space index should be built for the reference genome (see \code{\link{buildindex}} for details).

Subread can map short reads and long reads, as well as reads with variable length (e.g. Roche 454 reads).
It only takes $<$20 minutes for Subread to map 10 million 100bp reads to the human genome (one thread).
The running time of Subread is determined by the number of subreads extracted from reads (the argument \code{nsubreads}), and it only increases slightly with the increase of read length.

The amount of computer memory (RAM) used by this function can be specified via the \code{memory} parameter of the \code{\link{buildindex}} function, which has to called before running this function to perform the read alignment.
Subread uses no more than 8GB of memory when mapping reads to the human or mouse genome.

Two key parameters of the Subread aligner are the number of subreads extracted from the read \code{nsubreads} and the consensus threshold used for reporting the mapping location of the read \code{TH1} (also \code{TH2} for paired-end read data).
Using a higher consensus threshold will reduce the number of incorrect alignments, but it will also reduce the mapping sensitivity.
It was found that the default values (10 subreads extracted and a consensus threshold of 3) of these two parameters in this function yielded the best performance (Liao et al. 2013).

The Subread aligner has been demonstrated to have an excellent mapping ccuracy and sensitivity.
In particular, it has a superior performance in mapping RNA-seq reads thanks to its capacity in mapping exon-spanning reads (Liao et al. 2013).
}
\value{ 
No value is produced but a SAM format file is written to the current working directory.
}
\references{
Yang Liao, Gordon K Smyth and Wei Shi (2013), "The Subread aligner: fast, accurate and scalable read mapping by seed-and-vote",  Nucleic Acids Research, Volume 41, Advance Access, April 4 [Epub ahead of print] (\url{http://nar.oxfordjournals.org/content/early/2013/04/03/nar.gkt214.abstract})
}
\author{Wei Shi and Yang Liao}
%\note{}
%\seealso{}
\examples{
# build an index using a sample reference sequence ('reference.fa') that includes a chromosome called 'chr_dummy' and 90,000 bases
library(Rsubread)
ref <- system.file("extdata","reference.fa",package="Rsubread")
buildindex(basename="./reference_index",reference=ref)

# align a sample read dataset ('reads.txt') to the sample reference
reads <- system.file("extdata","reads.txt",package="Rsubread")
align(index="./reference_index",readfile1=reads,output_file="./Rsubread_alignment.SAM")
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
%\keyword{}
